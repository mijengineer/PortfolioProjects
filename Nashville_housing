-- Cleaning Data in SQL Querries
Select * from nashville_Housing
limit 1000;

--Sale Date
SELECT saledate, from nashville_housing 
limit 500;

--Property Address 
--Looked for property addresses that were null and matched the parcel id of another row
--and then joined the rows where the unieque id's were different.
SELECT * from nashville_housing 
Where propertyaddress is null
order by Parcelid;

SELECT a.parcelid, a.propertyaddress, b.parcelid, b.propertyaddress, Coalesce(a.propertyaddress, b.propertyaddress) 
from nashville_housing a
Join nashville_housing b 
	on a.parcelid = b.parcelid 
	AND a.uniqueid != b.uniqueid
where a.propertyaddress is null;

--Updated the table's missing values with the address.
Update nashville_housing as a
SET propertyaddress = Coalesce(a.propertyaddress, b.propertyaddress)
from nashville_housing as b
where a.parcelid = b.parcelid 
	AND a.uniqueid != b.uniqueid
	and a.propertyaddress is null;
	
--Breaking down the Address into (Address, City, State)
SELECT propertyaddress from nashville_housing 
order by Parcelid
Limit 100;

Select Substring(PropertyAddress, 1, position(',' in PropertyAddress)-1) as address,
Substring(PropertyAddress, position(',' in PropertyAddress)+2, Length(Propertyaddress)) as city
from nashville_housing;

--Add columns to the table and then update them
Alter Table nashville_housing
add PropertySplitAddress text;

Update Nashville_housing
set PropertySplitAddress = Substring(PropertyAddress, 1, position(',' in PropertyAddress)-1);

Alter Table nashville_housing
add PropertySplitCity text;

Update Nashville_housing
set PropertySplitCity = Substring(PropertyAddress, position(',' in PropertyAddress)+2, Length(Propertyaddress));

SELECT * from nashville_housing 
order by Parcelid
Limit 100;

--Separate Owner Address to multiple columns

SELECT owneraddress, split_part(owneraddress, ',',1) as address, 
		split_part(owneraddress, ',',2) as city,
		split_part(owneraddress, ',',3) as state
from nashville_housing
order by parcelid
limit 100;

Alter Table nashville_housing
add column ownersplitaddress text,
add column ownersplitcity text,
add column ownersplitstate text;

Update nashville_housing
Set ownersplitaddress = split_part(owneraddress, ',',1),
ownersplitcity = split_part(owneraddress, ',',2),
ownersplitstate = split_part(owneraddress, ',',3);

Select * From nashville_housing
limit 100;

--Binary Sold as Vacant with multiple options
Select Soldasvacant, count(soldasvacant)
from nashville_housing
group by soldasvacant;

Select Soldasvacant, 
Case when soldasvacant = 'Y' Then 'Yes'
		when soldasvacant = 'N' then 'No'
		else soldasvacant
		end
From nashville_housing;

Update nashville_housing
Set soldasvacant = Case when soldasvacant = 'Y' Then 'Yes'
					when soldasvacant = 'N' then 'No'
					else soldasvacant
					end;
					
--Remove Duplicates (Temptable)
drop table if exists nashville_housing_no_dupes;
create temp table nashville_housing_no_dupes as
	Select *, row_number() over(
		Partition by ParcelID, propertyaddress, saleprice, saledate, 
		legalreference order by uniqueid) as row_num
	from nashville_housing;

Delete from nashville_housing_no_dupes
where row_num > 1;

Select * from nashville_housing_no_dupes
where row_num >1
limit 100;

--Delete unused columns (like in a view)
Alter Table nashville_housing_no_dupes
Drop column if exists owneraddress, 
drop column if exists taxdistrict, 
drop column if exists propertyaddress,
drop column if exists row_num;

select * from nashville_housing_no_dupes;


